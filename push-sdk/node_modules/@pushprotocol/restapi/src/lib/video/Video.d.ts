import { ENV } from '../constants';
import { SignerType, VideoCallData, VideoCreateInputOptions, VideoRequestInputOptions, VideoAcceptRequestInputOptions, VideoConnectInputOptions, EnableAudioInputOptions, EnableVideoInputOptions } from '../types';
export declare const initVideoCallData: VideoCallData;
export declare class Video {
    private signer;
    private chainId;
    private pgpPrivateKey;
    private env;
    private peerInstance;
    private data;
    setData: (fn: (data: VideoCallData) => VideoCallData) => void;
    constructor({ signer, chainId, pgpPrivateKey, env, setData, }: {
        signer: SignerType;
        chainId: number;
        pgpPrivateKey: string;
        env?: ENV;
        setData: (fn: (data: VideoCallData) => VideoCallData) => void;
    });
    create(options: VideoCreateInputOptions): Promise<void>;
    request(options: VideoRequestInputOptions): Promise<void>;
    acceptRequest(options: VideoAcceptRequestInputOptions): Promise<void>;
    connect(options: VideoConnectInputOptions): void;
    disconnect(): void;
    enableVideo(options: EnableVideoInputOptions): void;
    enableAudio(options: EnableAudioInputOptions): void;
    isInitiator(): boolean;
}
